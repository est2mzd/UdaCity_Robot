# ベースイメージ
FROM osrf/ros:kinetic-desktop-full

ENV DEBIAN_FRONTEND=noninteractive

# ロケールの設定
RUN apt-get update && apt-get install -y locales
RUN locale-gen ja_JP.UTF-8

# 基本ツールのインストール
RUN apt-get install -y curl
RUN apt-get install -y wget
RUN apt-get install -y git
RUN apt-get install -y python-pip
RUN apt-get install -y build-essential
RUN apt-get install -y cmake
RUN apt-get install -y udev
RUN apt-get install -y linux-headers-4.4.0-210-generic

# ROS依存パッケージ（Gazebo関連）のインストール
RUN apt-get install -y ros-kinetic-gazebo-ros-pkgs
RUN apt-get install -y ros-kinetic-gazebo-ros-control

# 問題発生パッケージの分割インストール
RUN apt-get install -y ros-kinetic-librealsense || echo "Failed: librealsense"
RUN apt-get install -y ros-kinetic-realsense-camera || echo "Failed: realsense-camera"

# TurtleBot関連パッケージ
RUN apt-get install -y ros-kinetic-turtlebot || echo "Failed: turtlebot"
RUN apt-get install -y ros-kinetic-turtlebot-simulator || echo "Failed: turtlebot-simulator"
RUN apt-get install -y ros-kinetic-turtlebot-bringup || echo "Failed: turtlebot-bringup"
RUN apt-get install -y ros-kinetic-turtlebot-navigation || echo "Failed: turtlebot-navigation"
RUN apt-get install -y ros-kinetic-turtlebot-gazebo || echo "Failed: turtlebot-gazebo"
RUN apt-get install -y ros-kinetic-turtlebot-stage || echo "Failed: turtlebot-stage"
RUN apt-get install -y ros-kinetic-turtlebot-stdr || echo "Failed: turtlebot-stdr"

# 環境設定
# NOTE: 'rosdep init' はすでに初期化されているため、ビルド時に実行する必要はありません。
#       必要であれば、コンテナ実行後に以下のコマンドを手動実行してください:
#       $ rosdep update
RUN echo "source /opt/ros/kinetic/setup.bash" >> ~/.bashrc

# 追加: Python開発用ツール
# RUN apt-get install -y python-rosinstall
#RUN apt-get install -y python-rosinstall-generator
#RUN apt-get install -y python-wstool
#RUN apt-get install -y python-vcstool
#RUN apt-get install -y python-catkin-tools

# 追加: 依存関係修復
#RUN apt-get install -y python-empy
#RUN apt-get install -y python-nose
#RUN apt-get install -y python-catkin-pkg
#RUN apt-get install -y python-yaml
#RUN apt-get install -y python-rospkg
#RUN apt-get install -y python-netifaces

# 追加: ネットワークツール
#RUN apt-get install -y net-tools
#RUN apt-get install -y iputils-ping

# 追加: デバッグ用ツール
#RUN apt-get install -y nano
#RUN apt-get install -y vim
#RUN apt-get install -y lsof
#RUN apt-get install -y strace

# Open-GL関連
#RUN apt-get update && apt-get install -y mesa-utils 
#RUN apt-get update && apt-get install -y libgl1-mesa-dri
#RUN apt-get update && apt-get install -y xserver-xorg-video-intel

# OpenGL関連のインストール
#RUN apt-get update && \
#    apt-get install -y \
#        libx11-dev xorg-dev \
#        libglu1-mesa libglu1-mesa-dev \
#        libgl1-mesa-glx libgl1-mesa-dev

#RUN apt-get update && apt-get install -y --no-install-recommends mesa-utils
#RUN apt-get update && apt-get install -y --no-install-recommends libgl1-mesa-dri
#RUN apt-get update && apt-get install -y --no-install-recommends xserver-xorg-video-intel
#RUN apt-get update && apt-get install -y --no-install-recommends libgl1-mesa-glx
#RUN apt-get update && apt-get install -y --no-install-recommends libegl1-mesa
#RUN apt-get update && apt-get install -y --no-install-recommends libgles2-mesa
#RUN apt-get update && apt-get install -y --no-install-recommends xserver-xorg-core
##RUN apt-get update && apt-get install -y --no-install-recommends xserver-xorg-video-all
#RUN apt-get clean && rm -rf /var/lib/apt/lists/*



# 環境変数の設定
ENV ROS_DISTRO=kinetic
#ENV TURTLEBOT_GAZEBO_WORLD_FILE=/opt/ros/kinetic/share/turtlebot_gazebo/worlds/playground.world

#===================================================================#
# ユーザー情報を設定
ARG USER_NAME
ARG USER_ID
RUN useradd -m -s /bin/bash -u $USER_ID $USER_NAME && \
    echo "$USER_NAME ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# 権限を適切に設定
RUN chown -R $USER_NAME:$USER_NAME /home/$USER_NAME

# デフォルトのユーザー切り替え
USER $USER_NAME
WORKDIR /home/$USER_NAME
#===================================================================#


# デフォルトのコマンドとしてbashを起動
CMD ["/bin/bash"]
