# https://github.com/Seanmatthews/ros-docker-gazebo/blob/master/kinetic/Dockerfile
#FROM ros:kinetic-ros-base
FROM osrf/ros:kinetic-desktop-full
# e.g. FROM osrf/ros:kinetic-desktop-full

# optional, if the default user is not "root", you might need to switch to root here and at the end of the script to the original user again.
# e.g.
# USER root

RUN apt-get update && apt-get install -y --no-install-recommends \
        pkg-config \
        libxau-dev \
        libxdmcp-dev \
        libxcb1-dev \
        libxext-dev \
        libx11-dev && \
    rm -rf /var/lib/apt/lists/*

# replace with other Ubuntu version if desired
# see: https://hub.docker.com/r/nvidia/opengl/
COPY --from=nvidia/opengl:1.0-glvnd-runtime-ubuntu16.04 \
  /usr/local/lib/x86_64-linux-gnu \
  /usr/local/lib/x86_64-linux-gnu

# replace with other Ubuntu version if desired
# see: https://hub.docker.com/r/nvidia/opengl/
COPY --from=nvidia/opengl:1.0-glvnd-runtime-ubuntu16.04 \
  /usr/local/share/glvnd/egl_vendor.d/10_nvidia.json \
  /usr/local/share/glvnd/egl_vendor.d/10_nvidia.json

RUN echo '/usr/local/lib/x86_64-linux-gnu' >> /etc/ld.so.conf.d/glvnd.conf && \
    ldconfig && \
    echo '/usr/local/$LIB/libGL.so.1' >> /etc/ld.so.preload && \
    echo '/usr/local/$LIB/libEGL.so.1' >> /etc/ld.so.preload

# nvidia-container-runtime
ENV NVIDIA_VISIBLE_DEVICES \
    ${NVIDIA_VISIBLE_DEVICES:-all}
ENV NVIDIA_DRIVER_CAPABILITIES \
    ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics

# USER original_user
# install bootstrap tools
RUN apt-get update && apt-get install --no-install-recommends -y \
    ros-kinetic-gazebo-* \
  && rm -rf /var/lib/apt/lists/*
#===================================================================#
# ROS依存パッケージ（Gazebo関連）のインストール
#RUN apt-get install -y ros-kinetic-gazebo-ros-pkgs
#RUN apt-get install -y ros-kinetic-gazebo-ros-control

# 問題発生パッケージの分割インストール
#RUN apt-get install -y ros-kinetic-librealsense
#RUN apt-get install -y ros-kinetic-realsense-camera

#RUN apt-get install -y \
#    ros-kinetic-turtlebot \
#    ros-kinetic-turtlebot-apps \
#    ros-kinetic-turtlebot-interactions \
#    ros-kinetic-turtlebot-simulator \
#    ros-kinetic-kobuki-ftdi \
#    ros-kinetic-rocon-remocon \
#    ros-kinetic-rocon-qt-library \
#    ros-kinetic-ar-track-alvar-msgs
#===================================================================#
#RUN apt-get install -y \
#    ros-kinetic-turtlebot \
#    ros-kinetic-turtlebot-actions \
#    ros-kinetic-turtlebot-apps \
#    ros-kinetic-turtlebot-bringup \
#    ros-kinetic-turtlebot-calibration \
#    ros-kinetic-turtlebot-capabilities \
#    ros-kinetic-turtlebot-create \
#    ros-kinetic-turtlebot-dashboard \
#    ros-kinetic-turtlebot-description \
#    ros-kinetic-turtlebot-follower \
#    ros-kinetic-turtlebot-gazebo \
#    ros-kinetic-turtlebot-interactions \
#    ros-kinetic-turtlebot-interactive-markers \
#    ros-kinetic-turtlebot-loadout-kha1 \
#    ros-kinetic-turtlebot-msgs \
#    ros-kinetic-turtlebot-navigation \
#    ros-kinetic-turtlebot-rapps \
#    ros-kinetic-turtlebot-rviz-launchers \
#    ros-kinetic-turtlebot-simulator \
#    ros-kinetic-turtlebot-stage \
#    ros-kinetic-turtlebot-stdr \
#    ros-kinetic-turtlebot-teleop   
#===================================================================#
# ROS依存パッケージ（Gazebo関連）のインストール
#RUN apt-get install -y ros-kinetic-gazebo-ros-pkgs
#RUN apt-get install -y ros-kinetic-gazebo-ros-control

# 問題発生パッケージの分割インストール
#RUN apt-get install -y ros-kinetic-librealsense
#RUN apt-get install -y ros-kinetic-realsense-camera

# TurtleBot関連パッケージ
#RUN apt-get install -y ros-kinetic-turtlebot
#RUN apt-get install -y ros-kinetic-turtlebot-simulator
#RUN apt-get install -y ros-kinetic-turtlebot-bringup
#RUN apt-get install -y ros-kinetic-turtlebot-navigation
#RUN apt-get install -y ros-kinetic-turtlebot-gazebo
#RUN apt-get install -y ros-kinetic-turtlebot-stage
#RUN apt-get install -y ros-kinetic-turtlebot-stdr
#===================================================================#

#===================================================================#
# ユーザー情報を設定
ARG USER_NAME
ARG USER_ID
RUN useradd -m -s /bin/bash -u $USER_ID $USER_NAME && \
    echo "$USER_NAME ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# 権限を適切に設定
RUN chown -R $USER_NAME:$USER_NAME /home/$USER_NAME

# デフォルトのユーザー切り替え
USER $USER_NAME
WORKDIR /home/$USER_NAME
#===================================================================#


#CMD [ "gazebo" ]

# デフォルトのコマンドとしてbashを起動
CMD ["/bin/bash"]